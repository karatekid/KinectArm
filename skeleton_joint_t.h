/** THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT MODIFY
 * BY HAND!!
 *
 * Generated by lcm-gen
 **/

#include <stdint.h>
#include <stdlib.h>
#include <lcm/lcm_coretypes.h>
#include <lcm/lcm.h>

#ifndef _skeleton_joint_t_h
#define _skeleton_joint_t_h

#ifdef __cplusplus
extern "C" {
#endif

typedef struct _skeleton_joint_t skeleton_joint_t;
struct _skeleton_joint_t
{
    int32_t    valid;
    int32_t    x;
    int32_t    y;
    int32_t    z;
    int32_t    screen_x;
    int32_t    screen_y;
};

skeleton_joint_t   *skeleton_joint_t_copy(const skeleton_joint_t *p);
void skeleton_joint_t_destroy(skeleton_joint_t *p);

typedef struct _skeleton_joint_t_subscription_t skeleton_joint_t_subscription_t;
typedef void(*skeleton_joint_t_handler_t)(const lcm_recv_buf_t *rbuf,
             const char *channel, const skeleton_joint_t *msg, void *user);

int skeleton_joint_t_publish(lcm_t *lcm, const char *channel, const skeleton_joint_t *p);
skeleton_joint_t_subscription_t* skeleton_joint_t_subscribe(lcm_t *lcm, const char *channel, skeleton_joint_t_handler_t f, void *userdata);
int skeleton_joint_t_unsubscribe(lcm_t *lcm, skeleton_joint_t_subscription_t* hid);
int skeleton_joint_t_subscription_set_queue_capacity(skeleton_joint_t_subscription_t* subs,
                              int num_messages);


int  skeleton_joint_t_encode(void *buf, int offset, int maxlen, const skeleton_joint_t *p);
int  skeleton_joint_t_decode(const void *buf, int offset, int maxlen, skeleton_joint_t *p);
int  skeleton_joint_t_decode_cleanup(skeleton_joint_t *p);
int  skeleton_joint_t_encoded_size(const skeleton_joint_t *p);

// LCM support functions. Users should not call these
int64_t __skeleton_joint_t_get_hash(void);
int64_t __skeleton_joint_t_hash_recursive(const __lcm_hash_ptr *p);
int     __skeleton_joint_t_encode_array(void *buf, int offset, int maxlen, const skeleton_joint_t *p, int elements);
int     __skeleton_joint_t_decode_array(const void *buf, int offset, int maxlen, skeleton_joint_t *p, int elements);
int     __skeleton_joint_t_decode_array_cleanup(skeleton_joint_t *p, int elements);
int     __skeleton_joint_t_encoded_array_size(const skeleton_joint_t *p, int elements);
int     __skeleton_joint_t_clone_array(const skeleton_joint_t *p, skeleton_joint_t *q, int elements);

#ifdef __cplusplus
}
#endif

#endif
